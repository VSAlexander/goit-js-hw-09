{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXAQ,SAASC,cAAc,SAe/BC,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAEV,IAAIC,EAAaC,OAAOL,EAAMM,OAC9B,MAAMC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,IAChCzB,EAAcyB,EAAGL,GACdM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MAEjByB,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAqB5B,QAAeC,MAAU,IAEvE4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAElByB,EAAA7B,GAAS8B,OAAOG,QAAQ,oBAAoB9B,QAAeC,MAAU,IAGzEkB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let i = 1; i <= amountValue; i++) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayValue += stepValue;\n  }\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","delayValue","Number","value","stepValue","amountValue","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.31c2975c.js.map"}